{
  "name": "s3-batch",
  "description": "Batch upload data to S3. Assumes you are already using aws-sdk",
  "version": "0.1.5",
  "author": {
    "name": "Rich Harris"
  },
  "dependencies": {
    "extend": "~1.1.3"
  },
  "readme": "# s3-batch\n\nUtility for batch uploading files to S3. This is a rough-and-ready script developed for personal use, YMMV. It assumes you are using the AWS Node SDK - refer to the docs at <http://aws.amazon.com/sdkfornodejs/>\n\n## Usage\n\n```js\nvar S3Batch, batch;\n\nS3Batch = require( 's3-batch' );\n\n// you need to have your own s3 instance set up\nbatch = new S3Batch( s3 );\n\n// optionally you can provide default parameters as a second argument\nbatch = new S3Batch( s3, { Bucket: 'my-bucket', ACL: 'public-read' });\n```\n\n## Instance methods\n**batch.add( key, data[, params] );**  \nAdds a new file to the queue. `params` extend the defaults, and are as per the s3.putObject parameters (http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3/Client.html#putObject-property)\n\n**batch.on( eventName, callback );**  \nAdds an event callback (see **Instance events** below)\n\n**batch.start();**  \nStarts uploading\n\n\n## Instance properties\n**batch.s3**  \nThe S3 instance we initialised with\n\n**batch.total.files**  \nThe number of files in the queue\n\n**batch.total.bytes**  \nThe number of bytes in the queue\n\n**batch.completed.files**  \nThe number of files successfully uploaded\n\n**batch.completed.bytes**  \nThe number of bytes successfully uploaded\n\n\n## Instance events\nBelow, `file` as a callback argument refers to an object containing `key`, `data` and `params` objects as originally passed in to `batch.add`\n\n**success**  \nFired when a file is successfully uploaded. Callbacks receive `file`\n\n**progress**  \nFired when a file is successfully uploaded. Callbacks receive a number between 0 and 1, indicating batch progress. The number of bytes or files completed can be accessed using the instance properties listed above\n\n**error**  \nFired when a file fails to upload. Callbacks receive `file`\n\n**complete**  \nFired when all files have successfully uploaded (if any uploads result in an error, this will never fire)\n\n",
  "readmeFilename": "README.md",
  "_id": "s3-batch@0.1.5",
  "_from": "s3-batch@~0.1.4"
}
