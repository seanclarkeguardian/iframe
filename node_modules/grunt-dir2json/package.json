{
  "name": "grunt-dir2json",
  "description": "Flatten a folder to a JSON file representing its contents",
  "version": "0.1.5",
  "homepage": "https://github.com/GuardianInteractive/grunt-dir2json",
  "author": {
    "name": "Guardian Interactive team",
    "email": "interactive@guardian.co.uk",
    "url": "http://www.guardian.co.uk/profile/guardian-interactive-department"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/GuardianInteractive/grunt-dir2json.git"
  },
  "bugs": {
    "url": "https://github.com/GuardianInteractive/grunt-dir2json/issues"
  },
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-dir2json\n\n> Flatten a folder to a JSON file representing its contents\n\nOften, your project will depend on data in static files - configs, language files, templates, CSV data, and so on. Loading each of these files separately is a nuisance, and results in unnecessary HTTP requests.\n\nThis task combines all those files into a single .json file. For example if you had a folder that looked like this...\n\n```\ndata\n|- config.json\n|- tables\n   |- population.csv\n   |- growth.csv\n|- slides\n   |- 0.txt\n   |- 1.txt\n   |- 2.txt\n   |- 3.txt\n|- i18n\n   |- en-GB.json\n   |- en-US.json\n   |- fr.json\n   |- de.json\n```\n\n...you would get JSON that looked something like this, except minified:\n\n```js\n{\n  \"config\": {\n    // contents of config.json\n  },\n  \"tables\": {\n    \"population\": // contents of population.csv\n    \"growth\": // contents of growth.csv\n  },\n  \"slides\": [\n    \"contents of 0.txt\",\n    \"contents of 1.txt\",\n    \"contents of 2.txt\",\n    \"contents of 3.txt\"\n  ],\n  \"i18n\": {\n    \"en-GB\": {\n      // contents of en-GB.json\n    },\n    \"en-US\": {\n      // contents of en-US.json\n    },\n    \"fr\": {\n      // contents of fr.json\n    },\n    \"de\": {\n      // contents of de.json\n    },\n  }\n}\n```\n\nIf a file contains JSON, it is stored as JSON; if not, it is stored as text. If a folder only contains items with numeric filenames (as in the case of the `slides` folder above), it will become an array rather than an object.\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-dir2json --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-dir2json');\n```\n\n## The \"dir2json\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `dir2json` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  dir2json: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### exclude\nType: `String` or `Array`\n\nA pattern, or array of patterns, of filenames to exclude, e.g. `**/*/notes.md`. Uses the standard globbing syntax. `.DS_Store` and `Thumbs.db` files will **always** be excluded - you don't need to specify these.\n\n#### processContent\nType: `Function ( content, srcpath )`\n\nA function to process content. Will be applied to all files - if you want to selectively apply, filter by `srcpath`\n\n#### replacer\nType: `Function` or `Array`\n\nTransforms values and properties when stringifying JSON. See the [MDN docs](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify)\n\n#### space\nType: `String`\n\nPretty-prints the result using this string. See the [MDN docs](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/stringify)\n\n#### jsonpCallback\nType: `String`\n\nIf supplied, dir2json will create JSONP instead of JSON (note that the destination filename should end `.js` and not `.json` in this case)\n\n#### amd\nType: `Boolean`\n\nIf `true`, dir2json will create an AMD module (as above, extension should be `.js`)\n\n\n### Usage Examples\n\n#### Default Options\nThis will read the contents of `project/data` and write a JSON file representing its contents to `project/src/data.json`:\n\n```js\ngrunt.initConfig({\n  dir2json: {\n    data: {\n      root: 'project/data',\n      dest: 'project/src/data.json'\n    },\n  },\n})\n```\n\n#### Custom Options\nIn this (slightly contrived) example, there are two targets - `dev` and `dist`. In both cases .md files will be excluded, and .csv files will be parsed using an imaginary `csv-to-json` module. In the `dist` target, any files named `debug_hints.json` will also be excluded. \n\n```js\ngrunt.initConfig({\n  dir2json: {\n    options: {\n      exclude: '**/*.md',\n      processContent: function ( content, srcpath ) {\n        if ( srcpath.substr( -4 ) === '.csv' ) {\n          return require( 'csv-to-json' )( content );\n        }\n        return content;\n      }\n    },\n    dev: {\n      root: 'project/data',\n      dest: 'project/src/data.json'\n    },\n    dist: {\n      options: {\n        exclude: '**/*/debug_hints.json'\n      },\n      root: 'project/data',\n      dest: 'project/src/data.json'\n    }\n  },\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 0.1.0 - first release\n* 0.1.1 - trailing slashes in 'root' option are now ignored\n* 0.1.2 - AMD, JSONP and pretty-print options",
  "readmeFilename": "README.md",
  "_id": "grunt-dir2json@0.1.5",
  "_from": "grunt-dir2json@~0.1.5"
}
